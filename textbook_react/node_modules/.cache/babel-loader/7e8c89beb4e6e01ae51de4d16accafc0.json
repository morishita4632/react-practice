{"ast":null,"code":"var _jsxFileName = \"/home/morishita/react/textbook_react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // {}とreturnを省略できるが、可読性が下がる&ステート管理時に結局必要になるので非推奨\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App1 = () => {\n  return (\n    /*#__PURE__*/\n    // returnの中は1要素だけ。複数入れたい場合は外側をdivなどで囲む\n    _jsxDEV(\"div\", {\n      className: \"App1\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"App1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"hoge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"fuga\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 13\n        }, this), \" \", \"fuga2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"piyo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this)\n  );\n}; // フラグメントを利用すれば余計なノードを出力せず複数要素をまとめられる\n\n\n_c = App1;\n\nconst App2 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"App2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"hoge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"fuga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // styleはJSのオブジェクトで与える。外側の括弧は「JSを書く」合図。内側はオブジェクト。\n// 中身のオブジェクトだけ別のところで定義するのがよろしい。\n// このfontSizeのようにピュアな数値は自動的にpxがつく。別の単位（%など）の場合は文字列で与える。\n// ただしstyle属性でスタイリングは非推奨で、普通にclassNameとcssでやるべき。\n\n\n_c2 = App2;\n\nconst App3 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"App3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: 16,\n        height: \"80%\",\n        color: \"red\"\n      },\n      children: \"hoge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}; // 入力値がstateで制御されていない\"非制御コンポーネント\"の場合、value属性で指定した文字列をユーザ側で変更できない。defaultValueを使えはOK。チェックボックスなども同様\n\n\n_c3 = App3;\n\nconst App4 = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"App4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: \"value\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      defaultValue: \"defaultValue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this), \" checked\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), \" defaultChecked\"]\n  }, void 0, true);\n}; // propsは親コンポーネントから子コンポーネントへ渡される属性値のこと\n// まず親は子を呼ぶ際にattributeで値を渡す（name=\"hoge）\n\n\n_c4 = App4;\n\nconst App5_chi = props => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Hello, \", props.name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_c5 = App5_chi;\n\nconst App5_par = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"App5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(App5_chi, {\n      name: \"hoge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n/*-----------------------------------------------------*/\n\n\n_c6 = App5_par;\nReactDOM.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(App1, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App3, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App4, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(App5_par, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this)]\n}, void 0, true), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"App1\");\n$RefreshReg$(_c2, \"App2\");\n$RefreshReg$(_c3, \"App3\");\n$RefreshReg$(_c4, \"App4\");\n$RefreshReg$(_c5, \"App5_chi\");\n$RefreshReg$(_c6, \"App5_par\");","map":{"version":3,"sources":["/home/morishita/react/textbook_react/src/index.js"],"names":["React","ReactDOM","App1","App2","App3","fontSize","height","color","App4","App5_chi","props","name","App5_par","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB;AAAA;AAAS;AACP;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,wCACM;AAAA;AAAA;AAAA;AAAA,gBADN;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAWD,CAZD,C,CAcA;;;KAdMA,I;;AAeN,MAAMC,IAAI,GAAG,MAAM;AACjB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AAOD,CARD,C,CAUA;AACA;AACA;AACA;;;MAbMA,I;;AAcN,MAAMC,IAAI,GAAG,MAAM;AACjB,sBAAQ;AAAA,4BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,MAAM,EAAE,KAAxB;AAA+BC,QAAAA,KAAK,EAAE;AAAtC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFM;AAAA,kBAAR;AAID,CALD,C,CAOA;;;MAPMH,I;;AAQN,MAAMI,IAAI,GAAG,MAAM;AACjB,sBAAQ;AAAA,4BACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADM,eAEN;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFM,eAGN;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,YAAY,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YAHM,eAG2C;AAAA;AAAA;AAAA;AAAA,YAH3C,eAIN;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,OAAO;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJM,2BAKN;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,cAAc;AAArC;AAAA;AAAA;AAAA;AAAA,YALM;AAAA,kBAAR;AAOD,CARD,C,CAUA;AACA;;;MAXMA,I;;AAYN,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO;AAAA,0BAAWA,KAAK,CAACC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;MAAMF,Q;;AAIN,MAAMG,QAAQ,GAAG,MAAM;AACrB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAPD;AAWA;;;MAXMA,Q;AAYNX,QAAQ,CAACY,MAAT,eACE;AAAA,0BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAFF,eAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAHF,eAIE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,UALF;AAAA,gBADF,EASEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// {}とreturnを省略できるが、可読性が下がる&ステート管理時に結局必要になるので非推奨\nconst App1 = () => {\n  return ( // returnの中は1要素だけ。複数入れたい場合は外側をdivなどで囲む\n    <div className=\"App1\"> {/* classではなくclassNameを用いる */}\n      <h3>App1</h3>\n      <li>hoge</li>\n      <li>\n        fuga<br /> {/* JSXでは空要素の閉じスラッシュが必須 */}\n        fuga2\n      </li>\n      <li>piyo</li>\n    </div>\n  );\n}\n\n// フラグメントを利用すれば余計なノードを出力せず複数要素をまとめられる\nconst App2 = () => {\n  return (\n    <>\n      <h3>App2</h3>\n      <li>hoge</li>\n      <li>fuga</li>\n    </>\n  );\n}\n\n// styleはJSのオブジェクトで与える。外側の括弧は「JSを書く」合図。内側はオブジェクト。\n// 中身のオブジェクトだけ別のところで定義するのがよろしい。\n// このfontSizeのようにピュアな数値は自動的にpxがつく。別の単位（%など）の場合は文字列で与える。\n// ただしstyle属性でスタイリングは非推奨で、普通にclassNameとcssでやるべき。\nconst App3 = () => {\n  return (<>\n    <h3>App3</h3>\n    <h1 style={{ fontSize: 16, height: \"80%\", color: \"red\" }}>hoge</h1>\n  </>);\n}\n\n// 入力値がstateで制御されていない\"非制御コンポーネント\"の場合、value属性で指定した文字列をユーザ側で変更できない。defaultValueを使えはOK。チェックボックスなども同様\nconst App4 = () => {\n  return (<>\n    <h3>App4</h3>\n    <input type=\"text\" value=\"value\" />\n    <input type=\"text\" defaultValue=\"defaultValue\" /><br />\n    <input type=\"checkbox\" checked /> checked\n    <input type=\"checkbox\" defaultChecked /> defaultChecked\n  </>);\n}\n\n// propsは親コンポーネントから子コンポーネントへ渡される属性値のこと\n// まず親は子を呼ぶ際にattributeで値を渡す（name=\"hoge）\nconst App5_chi = (props) => {\n  return <p>Hello, {props.name}</p>\n}\n\nconst App5_par = () => {\n  return (\n    <>\n      <h3>App5</h3>\n      <App5_chi name=\"hoge\" />\n    </>\n  );\n}\n\n\n\n/*-----------------------------------------------------*/\nReactDOM.render(\n  <>\n    <App1 />\n    <App2 />\n    <App3 />\n    <App4 />\n    <App5_par />\n  </>\n  ,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}